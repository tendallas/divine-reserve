image: docker:stable

variables:
  CI_APP_IMAGE_WITH_TAG: "$CI_REGISTRY_IMAGE/app:$CI_COMMIT_REF_SLUG"
  CI_MASTER_BRANCH: "main"
  APP_NAME: "525_usa_landing"
  APP_NAME_VER: "${APP_NAME}_${CI_COMMIT_REF_SLUG}"

cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_MASTER_BRANCH
      when: always
    - when: never

stages:
  - build
  - deploy

before_script:
  - echo Logging in to $CI_REGISTRY...
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  - echo $CI_APP_IMAGE_WITH_TAG

app:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  stage: build
  script:
    - echo Build started on `date` for $APP_NAME - $CI_COMMIT_REF_SLUG
    - docker build -t "$CI_APP_IMAGE_WITH_TAG" -f Dockerfile .
    - docker images
    - docker push "$CI_APP_IMAGE_WITH_TAG"
    - docker system prune -f
    - docker image prune -a -f

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  needs:
    - app
  environment:
    name: prod
    url: "https://5mgourmet.com"
  before_script:
    # Setup SSH deploy keys
    - echo $CI_APP_IMAGE_WITH_TAG
    - apk add bash
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - bash -c '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh "$DEPLOY_USER"@"$DEPLOY_HOST" /usr/bin/bash -c 'set -e > /dev/null 2>&1;
      echo "Logging in to '$CI_REGISTRY' ... on STAGE";
      echo '"$CI_REGISTRY_PASSWORD"' | docker login -u '"$CI_REGISTRY_USER"' '"$CI_REGISTRY"' --password-stdin;
      docker pull '"$CI_APP_IMAGE_WITH_TAG"';
      docker ps -a | grep -E '"$APP_NAME_VER"' | awk "{print \$1}" | xargs -r docker stop | xargs -r docker rm;
      docker image prune -a -f;
      docker run -d -p 3002:3000 -t -i --name '"$APP_NAME_VER"' '"$CI_APP_IMAGE_WITH_TAG"';
      echo stepDone'
